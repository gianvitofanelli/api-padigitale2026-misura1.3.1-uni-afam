openapi: 3.0.0
x-stoplight:
  id: 0f56e32f16f60
info:
  title: API riferimento ANIS
  x-summary: Questo servizio ritorna l'elenco degli iscritti  a un ifs con almeno un titolo.
  version: 1.0.0
  description: |
    ### Documentazione

    ## API riferimento ANIS
    La seguente documentazione API fornisce un riferimento per l'integrazione e 
    l'accesso ai dati ANIS (Anagrafe Nazionale dell'Istruzione Superiore) relativi alle università. 
    Queste API consentono l'erogazione di servizi (e-service) che operano sui dati ANIS.

    # API Health Check
    Questa API fornisce un modo semplice per verificare lo stato di salute del sistema. 
    È un endpoint di base che può essere utilizzato per controllare se il servizio è in esecuzione correttamente.

    **Endpoint:**   GET  /status


    # Studenti che hanno conseguito almeno un titolo nell'anno accademico x
    Questa API fornisce un elenco di studenti che hanno conseguito almeno un titolo in uno specifico anno accademico. L'elenco è collegato ai rispettivi Codici Fiscali (CF) o identificativi ANPR. 
    I titoli possono includere lauree, diplomi, certificati o altri riconoscimenti accademici ottenuti dagli studenti presso l'IFS.

    **Endpoint:**   GET  /studenti/conseguito-titoli/{academicYear}

    **Params:**    `{academicYear}`: Anno accademico di riferimento.

    **Esempio di risposta:**

    ```json
    {
      "instituteCode": "IFS00123",
      "instituteName": "Istituto Tecnologie Avanzate",
      "students": [
        {
          "taxCode": "RSSMRA80A01F205D",
          "personID": "AB123456C",
          "givenName": "Mario",
          "familyName": "Rossi",
          "birthDate": "1990-05-17",
          "birthPlace": "Roma"
        },
        {
          "taxCode": "VRDLCU90A01H501L",
          "personID": "ANPR4567D",
          "givenName": "Luca",
          "familyName": "Verdi",
          "birthDate": "1995-03-25",
          "birthPlace": "Milano"
        }
      ]
    }
  contact:
    name: helpdesk
    email: helpdesk@gmail.com
  x-api-id: 00000000-0000-0000-0000-000000000000
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /status:
    get:
      summary: Health Check
      operationId: check-status
      description: Verificare lo stato di salute del sistema
      tags:
        - HEALTH-CHECK
      responses:
        '204':
          description: il servizio è in esecuzione correttamente.
        '500':
          description: il servizio non è in esecuzione.
  '/studenti/conseguito-titoli/{academicYear}':
    get:
      summary: Studenti che hanno conseguito almeno un titolo nell'anno accademico x
      tags:
        - STUDENTI-CON-TITOLO
      parameters:
        - schema:
            type: string
          in: header
          name: Method
          description: Specifica il metodo HTTP utilizzato per la richiesta.
        - schema:
            type: string
          in: header
          name: Path
          description: Specifica il percorso o l'endpoint dell'API a cui viene indirizzata la richiesta.
        - schema:
            type: string
          in: header
          name: Scheme
          description: 'Specifica lo schema o il protocollo utilizzato per la comunicazione tra il client e il server, come HTTP o HTTPS.'
        - schema:
            type: string
          in: header
          name: Accept-Encoding
          description: 'Utilizzato per indicare al server le opzioni di compressione supportate dal client, come gzip o deflate.'
        - schema:
            type: string
          in: header
          name: Accept-Language
          description: 'Utilizzato per indicare al server la lingua preferita per la risposta, in modo che possa restituire la risposta nella lingua corretta, se disponibile.'
        - schema:
            type: string
          in: header
          name: Origin
          description: 'Utilizzato in contesti di sicurezza per indicare l''origine della richiesta, ad esempio durante le richieste CORS (Cross-Origin Resource Sharing).'
        - schema:
            type: string
          in: header
          name: User-Agent
          description: 'Utilizzato per identificare il client che sta effettuando la richiesta, ad esempio il browser e la versione utilizzata.'
      responses:
        '200':
          description: Richiesta eseguita con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentiIscritti'
              examples:
                Example 1:
                  value:
                    instituteCode: IFS00123
                    instituteName: Istituto Tecnologie Avanzate
                    students:
                      - taxCode: RSSMRA80A01F205D
                        personID: AB123456C
                        givenName: Mario
                        familyName: Rossi
                        birthDate: '1990-05-17'
                        birthPlace: Roma
                      - taxCode: VRDLCU90A01H501L
                        personID: ANPR4567D
                        givenName: Luca
                        familyName: Verdi
                        birthDate: '1995-03-25'
                        birthPlace: Milano
                Example 2:
                  value:
                    instituteCode: IFS00123
                    instituteName: Istituto Tecnologie Avanzate
                    students: []
          headers:
            Content-Length:
              schema:
                type: integer
                format: int64
              description: 'utilizzato per indicare la dimensione del corpo della risposta, consentendo al client di gestire correttamente la ricezione dei dati.'
            Cache-Control:
              schema:
                type: string
              description: 'utilizzato per indicare al client o ai server intermedi come gestire la memorizzazione nella cache della risposta, ad esempio "no-cache" per impedire la memorizzazione nella cache.'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: utilizzato per consentire a determinati origini di accedere alle risorse tramite richieste cross-origin.
            X-RateLimit-Limit:
              schema:
                type: integer
                format: int64
              description: specifica il numero massimo di richieste consentite entro un determinato periodo di tempo (solitamente misurato in secondi).
            X-RateLimit-Remaining:
              schema:
                type: integer
                format: int64
              description: utilizzato per indicare il numero di richieste API rimanenti all'interno del periodo di tempo specificato dal server.
            X-RateLimit-Reset:
              schema:
                type: string
                format: date-time
              description: utilizzato per indicare il momento in cui il limite delle richieste API verrà ripristinato.
        '500':
          description: Errore interno del server
          headers:
            Content-Length:
              schema:
                type: integer
                format: int64
              description: 'utilizzato per indicare la dimensione del corpo della risposta, consentendo al client di gestire correttamente la ricezione dei dati.'
            Cache-Control:
              schema:
                type: string
              description: 'utilizzato per indicare al client o ai server intermedi come gestire la memorizzazione nella cache della risposta, ad esempio "no-cache" per impedire la memorizzazione nella cache.'
            Access-Control-Allow-Origin:
              schema:
                type: string
              description: utilizzato per consentire a determinati origini di accedere alle risorse tramite richieste cross-origin.
            X-RateLimit-Limit:
              schema:
                type: integer
                format: int64
              description: specifica il numero massimo di richieste consentite entro un determinato periodo di tempo (solitamente misurato in secondi).
            X-RateLimit-Remaining:
              schema:
                type: integer
                format: int64
              description: utilizzato per indicare il numero di richieste API rimanenti all'interno del periodo di tempo specificato dal server.
            X-RateLimit-Reset:
              schema:
                type: string
                format: date-time
              description: utilizzato per indicare il momento in cui il limite delle richieste API verrà ripristinato.
      operationId: studenti-con-titoli
      description: Restituisce la lista degli studenti che hanno conseguito almeno un titolo nell'anno accademico specificato.
    parameters:
      - schema:
          type: string
          pattern: '^\d{4}-\d{4}$'
          example: 2022-2023
        name: academicYear
        in: path
        required: true
        description: Anno accademico di riferimento
components:
  schemas:
    StudentiIscritti:
      type: object
      x-examples:
        Example 1:
          instituteCode: IFS00123
          instituteName: Istituto Tecnologie Avanzate
          students:
            - taxCode: RSSMRA80A01F205D
              personID: AB123456C
              givenName: Mario
              familyName: Rossi
              birthDate: '1990-05-17'
              birthPlace: Roma
            - taxCode: VRDLCU90A01H501L
              personID: ANPR4567D
              givenName: Luca
              familyName: Verdi
              birthDate: '1995-03-25'
              birthPlace: Milano
      x-stoplight:
        id: 582aaf1b98185
      description: Studenti iscritti a quell'istituto
      properties:
        instituteCode:
          type: string
          description: Codice identificativo dell’istituto
          readOnly: true
        instituteName:
          type: string
          description: Denominazione dell’istituto
          readOnly: true
        students:
          type: array
          description: Lista studenti iscritti
          items:
            type: object
            properties:
              taxCode:
                type: string
                description: 'Codice Fiscale Studente '
                example: RSSMRA80A01F205D
                pattern: '^[A-Z]{6}\d{2}[A-Z]\d{2}[A-Z]\d{3}[A-Z]$'
                minLength: 16
                maxLength: 16
                readOnly: true
              personID:
                type: string
                description: Identificativo ANPR
                maxLength: 9
                minLength: 9
                pattern: '^[A-Z0-9]{8}[A-Z]$'
                example: AB123456C
                readOnly: true
              givenName:
                type: string
                description: 'Nome Studente '
                example: Mario
                pattern: '^[A-ZÀ-ÖØ-Ýa-zà-öø-ý\s''-]+$'
                readOnly: true
              familyName:
                type: string
                description: Cognome Studente
                example: Rossi
                pattern: '^[A-ZÀ-ÖØ-Ýa-zà-öø-ý\s''-]+$'
                readOnly: true
              birthDate:
                type: string
                format: date
                example: '1990-05-17'
                pattern: '^\d{4}-\d{2}-\d{2}$'
                description: Data di nascita dello studente
                readOnly: true
              birthPlace:
                type: string
                example: Rome
                description: Luogo di nascita dello studente
                readOnly: true
  requestBodies: {}
  responses: {}
servers:
  - url: 'https://localhost:8080/api'
    description: localhost
tags:
  - name: API-ANIS
  - name: HEALTH-CHECK
  - name: STUDENTI-CON-TITOLO
